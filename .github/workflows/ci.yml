- name: Configure and build Qt
  shell: cmd
  run: |
    mkdir build
    cd build
    
    set PATH=C:\mingw64\bin;%PATH%
    
    set CFLAGS=-O3 -s
    set CXXFLAGS=-O3 -s
    
    REM Create an absolute path for the install directory
    set INSTALL_DIR=%CD%\install
    
    REM Use the correct format for setting environment variables in GitHub Actions
    echo QT_INSTALL_DIR=%INSTALL_DIR% >> %GITHUB_ENV%
    
    ..\configure.bat -static ^
    -ltcg ^
    -qt-zlib ^
    -qt-libjpeg ^
    -qt-libpng ^
    -qt-freetype ^
    -qt-pcre ^
    -no-harfbuzz ^
    -schannel ^
    -reduce-exports ^
    -no-feature-testlib ^
    -platform win32-g++ ^
    -prefix %INSTALL_DIR% ^
    -submodules qtbase,qtdeclarative,qtmultimedia ^
    ${{ matrix.build_type == 'debug' && '-debug' || '-release' }}
    
    mingw32-make -j %NUMBER_OF_PROCESSORS%
    mingw32-make install

- name: Package artifacts
  shell: pwsh
  run: |
    # Get the install directory from environment variable
    $InstallDir = $env:QT_INSTALL_DIR
    
    # Print debugging information
    Write-Host "Install directory from env: $InstallDir"
    
    # Ensure the variable is set
    if (-not $InstallDir) {
      Write-Host "Error: QT_INSTALL_DIR environment variable is not set!"
      # Try to find the install directory in the expected location
      $PotentialPath = ".\build\install"
      if (Test-Path $PotentialPath) {
        Write-Host "Found likely install directory at $PotentialPath"
        $InstallDir = (Get-Item $PotentialPath).FullName
      } else {
        Write-Host "Could not find install directory. Directories in current path:"
        Get-ChildItem -Path "." -Directory
        Write-Host "Directories in build path (if exists):"
        if (Test-Path ".\build") {
          Get-ChildItem -Path ".\build" -Directory
        }
        exit 1
      }
    }
    
    # Build package name
    $PACKAGE_NAME = "qt5-windows-mingw-${{ matrix.build_type }}-${{ needs.setup.outputs.qt_version }}"
    
    # Check if the install directory exists
    if (-Not (Test-Path -Path $InstallDir)) {
      Write-Host "Error: Install directory $InstallDir does not exist"
      exit 1
    }
    
    # Create a package directory with the final name
    $PackageDir = $PACKAGE_NAME
    New-Item -Path $PackageDir -ItemType Directory -Force
    
    # Copy the entire install directory content to the package directory
    Write-Host "Copying files from $InstallDir to $PackageDir"
    Copy-Item -Path "$InstallDir\*" -Destination $PackageDir -Recurse -Force
    
    # Create the zip file
    Write-Host "Creating zip archive $PACKAGE_NAME.zip"
    Compress-Archive -Path $PackageDir -DestinationPath "$PACKAGE_NAME.zip" -Force
